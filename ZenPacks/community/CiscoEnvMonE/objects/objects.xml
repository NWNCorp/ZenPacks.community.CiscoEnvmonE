<?xml version="1.0"?>
<objects>
<!-- ('', 'zport', 'dmd', 'Devices', 'Network', 'Cisco', 'rrdTemplates', 'CiscoEnvMonFan') -->
<object id='/zport/dmd/Devices/Network/Cisco/rrdTemplates/CiscoEnvMonFan' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
ZenPacks.community.CiscoEnvMonE.CiscoEnvMonFan
</property>
<tomanycont id='datasources'>
<object id='ciscoEnvMonFanState' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
SNMP
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="int" id="cycletime" mode="w" >
300
</property>
<property type="string" id="oid" mode="w" >
1.3.6.1.4.1.9.9.13.1.4.1.3
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
Auto
</property>
<tomanycont id='datapoints'>
<object id='ciscoEnvMonFanState' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='thresholds'>
<object id='state' module='Products.ZenModel.MinMaxThreshold' class='MinMaxThreshold'>
<property type="string" id="eventClass" mode="w" >
/Status/CiscoEnvMonFan
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property label="DataPoints" type="lines" id="dsnames" mode="w" >
['ciscoEnvMonFanState_ciscoEnvMonFanState']
</property>
<property label="Enabled" type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="minval" mode="w" >
1
</property>
<property type="string" id="maxval" mode="w" >
1
</property>
<property type="int" id="escalateCount" mode="w" >
0
</property>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='Fan State' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
code
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="text" id="custom" mode="w" >
COMMENT: \n
COMMENT:---Status Codes---\n
COMMENT: \n
COMMENT:1\: Normal\t\t - good fan speed readings and sensor functioning\n
COMMENT:2\: Warning\t\t - typically fan sensor reading low or high\n
COMMENT:3\: Critical\t\t - typically fan sensor reading low or high\n
COMMENT:4\: Shutdown\t\t - fan sensor disabled\n
COMMENT:5\: Not Present\t\t - not installed or missing\n
COMMENT:6\: Not Functioning\t - broken sensor\n
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
0
</property>
<tomanycont id='graphPoints'>
<object id='ciscoEnvMonFanState' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
Status Code
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
ciscoEnvMonFanState_ciscoEnvMonFanState
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<!-- ('', 'zport', 'dmd', 'Devices', 'Network', 'Cisco', 'rrdTemplates', 'CiscoEnvMonPowerSupply') -->
<object id='/zport/dmd/Devices/Network/Cisco/rrdTemplates/CiscoEnvMonPowerSupply' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
ZenPacks.community.CiscoEnvMonE.CiscoEnvMonPowerSupply
</property>
<tomanycont id='datasources'>
<object id='ciscoEnvMonSupplyState' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
SNMP
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="int" id="cycletime" mode="w" >
300
</property>
<property type="string" id="oid" mode="w" >
1.3.6.1.4.1.9.9.13.1.5.1.3
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
Auto
</property>
<tomanycont id='datapoints'>
<object id='ciscoEnvMonSupplyState' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='thresholds'>
<object id='state' module='Products.ZenModel.MinMaxThreshold' class='MinMaxThreshold'>
<property type="string" id="eventClass" mode="w" >
/Status/CiscoEnvMonPowerSupply
</property>
<property type="int" id="severity" mode="w" >
5
</property>
<property label="DataPoints" type="lines" id="dsnames" mode="w" >
['ciscoEnvMonSupplyState_ciscoEnvMonSupplyState']
</property>
<property label="Enabled" type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="minval" mode="w" >
1
</property>
<property type="string" id="maxval" mode="w" >
1
</property>
<property type="int" id="escalateCount" mode="w" >
0
</property>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='Power Supply State' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
state code
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="text" id="custom" mode="w" >
COMMENT: \n
COMMENT:---Status Codes---\n
COMMENT: \n
COMMENT:1\: Normal\t\t - good performance readings and sensor functioning\n
COMMENT:2\: Warning\t\t - typically power supply sensor reading low or high\n
COMMENT:3\: Critical\t\t - typically power supply sensor reading low or high\n
COMMENT:4\: Shutdown\t\t - power supply sensor disabled\n
COMMENT:5\: Not Present\t\t - not installed or missing\n
COMMENT:6\: Not Functioning\t - broken sensor\n
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
0
</property>
<tomanycont id='graphPoints'>
<object id='ciscoEnvMonSupplyState' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
ciscoEnvMonSupplyState_ciscoEnvMonSupplyState
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<!-- ('', 'zport', 'dmd', 'Devices', 'Network', 'Cisco', 'rrdTemplates', 'CiscoEnvMonTemperatureSensor') -->
<object id='/zport/dmd/Devices/Network/Cisco/rrdTemplates/CiscoEnvMonTemperatureSensor' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
ZenPacks.community.CiscoEnvMonE.CiscoEnvMonTemperatureSensor
</property>
<tomanycont id='datasources'>
<object id='ciscoEnvMonTemperatureState' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
SNMP
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="int" id="cycletime" mode="w" >
300
</property>
<property type="string" id="oid" mode="w" >
1.3.6.1.4.1.9.9.13.1.3.1.6
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
Auto
</property>
<tomanycont id='datapoints'>
<object id='ciscoEnvMonTemperatureState' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='ciscoEnvMonTemperatureStatusValue' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
SNMP
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="int" id="cycletime" mode="w" >
300
</property>
<property type="string" id="oid" mode="w" >
1.3.6.1.4.1.9.9.13.1.3.1.3
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
Auto
</property>
<tomanycont id='datapoints'>
<object id='ciscoEnvMonTemperatureStatusValue' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='thresholds'>
<object id='TemperatureHigh' module='Products.ZenModel.MinMaxThreshold' class='MinMaxThreshold'>
<property type="string" id="eventClass" mode="w" >
/Status/CiscoEnvMonTemperatureSensor
</property>
<property type="int" id="severity" mode="w" >
5
</property>
<property label="DataPoints" type="lines" id="dsnames" mode="w" >
['ciscoEnvMonTemperatureStatusValue_ciscoEnvMonTemperatureStatusValue']
</property>
<property label="Enabled" type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="maxval" mode="w" >
(here.sensor_temperature_threshold) * ((here.zCiscoMonTemperatureFactor) or 1)
</property>
<property type="int" id="escalateCount" mode="w" >
0
</property>
</object>
<object id='state' module='Products.ZenModel.MinMaxThreshold' class='MinMaxThreshold'>
<property type="string" id="eventClass" mode="w" >
/Status/CiscoEnvMonTemperatureSensor
</property>
<property type="int" id="severity" mode="w" >
5
</property>
<property label="DataPoints" type="lines" id="dsnames" mode="w" >
['ciscoEnvMonTemperatureState_ciscoEnvMonTemperatureState']
</property>
<property label="Enabled" type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="minval" mode="w" >
1
</property>
<property type="string" id="maxval" mode="w" >
1
</property>
<property type="int" id="escalateCount" mode="w" >
0
</property>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='Temperature Reading - C' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
Celcius
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
0
</property>
<property type="int" id="maxy" mode="w" >
150
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
0
</property>
<tomanycont id='graphPoints'>
<object id='TemperatureHigh' module='Products.ZenModel.ThresholdGraphPoint' class='ThresholdGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property type="string" id="threshId" mode="w" >
TemperatureHigh
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
</object>
<object id='ciscoEnvMonTemperatureStatusValue' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property type="string" id="color" mode="w" >
FF8C00
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
Temperature
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
ciscoEnvMonTemperatureStatusValue_ciscoEnvMonTemperatureStatusValue
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Temperature Reading - F' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
Fahrenheit
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
0
</property>
<property type="int" id="maxy" mode="w" >
300
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
1
</property>
<tomanycont id='graphPoints'>
<object id='TemperatureHigh' module='Products.ZenModel.ThresholdGraphPoint' class='ThresholdGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property type="string" id="threshId" mode="w" >
TemperatureHigh
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
</object>
<object id='ciscoEnvMonTemperatureStatusValue' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property type="string" id="color" mode="w" >
FF8C00
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="rpn" mode="w" >
1.8,*,32,+
</property>
<property type="string" id="dpName" mode="w" >
ciscoEnvMonTemperatureStatusValue_ciscoEnvMonTemperatureStatusValue
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
<object id='Temperature Sensor State' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
state code
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="text" id="custom" mode="w" >
COMMENT: \n
COMMENT:---Status Codes---\n
COMMENT: \n
COMMENT:1\: Normal\t\t - good temperature readings and sensor functioning\n
COMMENT:2\: Warning\t\t - typically temperature sensor reading low or high\n
COMMENT:3\: Critical\t\t - typically temperature sensor reading low or high\n
COMMENT:4\: Shutdown\t\t - temperature sensor disabled\n
COMMENT:5\: Not Present\t\t - not installed or missing\n
COMMENT:6\: Not Functioning\t - broken sensor\n
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
2
</property>
<tomanycont id='graphPoints'>
<object id='ciscoEnvMonTemperatureState' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
ciscoEnvMonTemperatureState_ciscoEnvMonTemperatureState
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<!-- ('', 'zport', 'dmd', 'Devices', 'Network', 'Cisco', 'rrdTemplates', 'CiscoEnvMonVoltageSensor') -->
<object id='/zport/dmd/Devices/Network/Cisco/rrdTemplates/CiscoEnvMonVoltageSensor' module='Products.ZenModel.RRDTemplate' class='RRDTemplate'>
<property type="string" id="targetPythonClass" mode="w" >
ZenPacks.community.CiscoEnvMonE.CiscoEnvMonVoltageSensor
</property>
<tomanycont id='datasources'>
<object id='ciscoEnvMonVoltageState' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
SNMP
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="int" id="cycletime" mode="w" >
300
</property>
<property type="string" id="oid" mode="w" >
1.3.6.1.4.1.9.9.13.1.2.1.7
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
Auto
</property>
<tomanycont id='datapoints'>
<object id='ciscoEnvMonVoltageState' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
<object id='ciscoEnvMonVoltageStatusValue' module='Products.ZenModel.BasicDataSource' class='BasicDataSource'>
<property select_variable="sourcetypes" type="selection" id="sourcetype" mode="w" >
SNMP
</property>
<property type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="eventClass" mode="w" >
/Cmd/Fail
</property>
<property type="int" id="severity" mode="w" >
3
</property>
<property type="int" id="cycletime" mode="w" >
300
</property>
<property type="string" id="oid" mode="w" >
1.3.6.1.4.1.9.9.13.1.2.1.3
</property>
<property type="boolean" id="usessh" mode="w" >
False
</property>
<property type="string" id="parser" mode="w" >
Auto
</property>
<tomanycont id='datapoints'>
<object id='ciscoEnvMonVoltageStatusValue' module='Products.ZenModel.RRDDataPoint' class='RRDDataPoint'>
<property select_variable="rrdtypes" type="selection" id="rrdtype" mode="w" >
GAUGE
</property>
<property type="boolean" id="isrow" mode="w" >
True
</property>
</object>
</tomanycont>
</object>
</tomanycont>
<tomanycont id='thresholds'>
<object id='state' module='Products.ZenModel.MinMaxThreshold' class='MinMaxThreshold'>
<property type="string" id="eventClass" mode="w" >
/Status/CiscoEnvMonVoltageSensor
</property>
<property type="int" id="severity" mode="w" >
5
</property>
<property label="DataPoints" type="lines" id="dsnames" mode="w" >
['ciscoEnvMonVoltageState_ciscoEnvMonVoltageState']
</property>
<property label="Enabled" type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="minval" mode="w" >
1
</property>
<property type="string" id="maxval" mode="w" >
1
</property>
<property type="int" id="escalateCount" mode="w" >
0
</property>
</object>
<object id='voltageHigh' module='Products.ZenModel.MinMaxThreshold' class='MinMaxThreshold'>
<property type="string" id="eventClass" mode="w" >
/Status/CiscoEnvMonVoltageSensor
</property>
<property type="int" id="severity" mode="w" >
5
</property>
<property label="DataPoints" type="lines" id="dsnames" mode="w" >
['ciscoEnvMonVoltageStatusValue_ciscoEnvMonVoltageStatusValue']
</property>
<property label="Enabled" type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="maxval" mode="w" >
(here.high_voltage_threshold) * ((here.zCiscoMonVoltageFactor) or 1)
</property>
<property type="int" id="escalateCount" mode="w" >
0
</property>
</object>
<object id='voltageLow' module='Products.ZenModel.MinMaxThreshold' class='MinMaxThreshold'>
<property type="string" id="eventClass" mode="w" >
/Status/CiscoEnvMonVoltageSensor
</property>
<property type="int" id="severity" mode="w" >
5
</property>
<property label="DataPoints" type="lines" id="dsnames" mode="w" >
['ciscoEnvMonVoltageStatusValue_ciscoEnvMonVoltageStatusValue']
</property>
<property label="Enabled" type="boolean" id="enabled" mode="w" >
True
</property>
<property type="string" id="minval" mode="w" >
(here.low_voltage_threshold) *  (1 + (1 - (here.zCiscoMonVoltageFactor or 1)))
</property>
<property type="int" id="escalateCount" mode="w" >
0
</property>
</object>
</tomanycont>
<tomanycont id='graphDefs'>
<object id='Voltage Reading' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
150
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
Volts
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
-1
</property>
<property type="int" id="maxy" mode="w" >
-1
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
0
</property>
<tomanycont id='graphPoints'>
<object id='ciscoEnvMonVoltageStatusValue' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
2
</property>
<property type="string" id="color" mode="w" >
9400D3
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="rpn" mode="w" >
1000.0,/
</property>
<property type="string" id="dpName" mode="w" >
ciscoEnvMonVoltageStatusValue_ciscoEnvMonVoltageStatusValue
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
<object id='voltageHigh' module='Products.ZenModel.ThresholdGraphPoint' class='ThresholdGraphPoint'>
<property type="long" id="sequence" mode="w" >
1
</property>
<property type="string" id="threshId" mode="w" >
voltageHigh
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
</object>
<object id='voltageLow' module='Products.ZenModel.ThresholdGraphPoint' class='ThresholdGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property type="string" id="threshId" mode="w" >
voltageLow
</property>
<property type="string" id="color" mode="w" >
8B4513
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
</object>
</tomanycont>
</object>
<object id='Voltage Sensor State' module='Products.ZenModel.GraphDefinition' class='GraphDefinition'>
<property type="int" id="height" mode="w" >
100
</property>
<property type="int" id="width" mode="w" >
500
</property>
<property type="string" id="units" mode="w" >
state code
</property>
<property type="boolean" id="log" mode="w" >
False
</property>
<property type="boolean" id="base" mode="w" >
False
</property>
<property type="int" id="miny" mode="w" >
0
</property>
<property type="int" id="maxy" mode="w" >
10
</property>
<property type="text" id="custom" mode="w" >
COMMENT: \n
COMMENT:---Status Codes---\n
COMMENT: \n
COMMENT:1\: Normal\t\t - good voltage readings and sensor functioning\n
COMMENT:2\: Warning\t\t - typically voltage sensor reading low or high\n
COMMENT:3\: Critical\t\t - typically voltage sensor reading low or high\n
COMMENT:4\: Shutdown\t\t - voltage sensor disabled\n
COMMENT:5\: Not Present\t\t - not installed or missing\n
COMMENT:6\: Not Functioning\t - broken Sensor\n
</property>
<property type="boolean" id="hasSummary" mode="w" >
True
</property>
<property type="long" id="sequence" mode="w" >
1
</property>
<tomanycont id='graphPoints'>
<object id='ciscoEnvMonVoltageState' module='Products.ZenModel.DataPointGraphPoint' class='DataPointGraphPoint'>
<property type="long" id="sequence" mode="w" >
0
</property>
<property select_variable="lineTypes" type="selection" id="lineType" mode="w" >
LINE
</property>
<property type="long" id="lineWidth" mode="w" >
1
</property>
<property type="boolean" id="stacked" mode="w" >
False
</property>
<property type="string" id="format" mode="w" >
%5.2lf%s
</property>
<property type="string" id="legend" mode="w" >
${graphPoint/id}
</property>
<property type="long" id="limit" mode="w" >
-1
</property>
<property type="string" id="dpName" mode="w" >
ciscoEnvMonVoltageState_ciscoEnvMonVoltageState
</property>
<property type="string" id="cFunc" mode="w" >
AVERAGE
</property>
</object>
</tomanycont>
</object>
</tomanycont>
</object>
<!-- ('', 'zport', 'dmd', 'Events', 'Status', 'CiscoEnvMonFan') -->
<object id='/zport/dmd/Events/Status/CiscoEnvMonFan' module='Products.ZenEvents.EventClass' class='EventClass'>
<property type="text" id="transform" mode="w" >
from ZenPacks.community.CiscoEnvMonE import transforms
transforms.envmon_status_handler(device, component, evt)
</property>
</object>
<!-- ('', 'zport', 'dmd', 'Events', 'Status', 'CiscoEnvMonPowerSupply') -->
<object id='/zport/dmd/Events/Status/CiscoEnvMonPowerSupply' module='Products.ZenEvents.EventClass' class='EventClass'>
<property type="text" id="transform" mode="w" >
from ZenPacks.community.CiscoEnvMonE import transforms
transforms.envmon_status_handler(device, component, evt)
</property>
</object>
<!-- ('', 'zport', 'dmd', 'Events', 'Status', 'CiscoEnvMonTemperatureSensor') -->
<object id='/zport/dmd/Events/Status/CiscoEnvMonTemperatureSensor' module='Products.ZenEvents.EventClass' class='EventClass'>
<property type="text" id="transform" mode="w" >
from ZenPacks.community.CiscoEnvMonE import transforms

ttype = ''

if evt.eventKey == 'ciscoEnvMonTemperatureStatusValue_ciscoEnvMonTemperatureStatusValue|TemperatureHigh':
    ttype = 'tHigh'
    transforms.envmon_process_threshold(device, component, evt, ttype)
else:
    transforms.envmon_status_handler(device, component, evt)
</property>
</object>
<!-- ('', 'zport', 'dmd', 'Events', 'Status', 'CiscoEnvMonVoltageSensor') -->
<object id='/zport/dmd/Events/Status/CiscoEnvMonVoltageSensor' module='Products.ZenEvents.EventClass' class='EventClass'>
<property type="text" id="transform" mode="w" >
"""
if this is a threshold checking status, call envmon_status_handler()
if its a threshold checking temperature readings call envmon_process_threshold()
"""
from ZenPacks.community.CiscoEnvMonE import transforms

ttype = ''

if evt.eventKey == 'ciscoEnvMonVoltageStatusValue_ciscoEnvMonVoltageStatusValue|voltageHigh':
    ttype = 'vHigh'
    transforms.envmon_process_threshold(device, component, evt, ttype)
elif evt.eventKey == 'ciscoEnvMonVoltageStatusValue_ciscoEnvMonVoltageStatusValue|voltageLow':
    ttype = 'vLow'
    transforms.envmon_process_threshold(device, component, evt, ttype)
else:
    transforms.envmon_status_handler(device, component, evt)
</property>
</object>
</objects>

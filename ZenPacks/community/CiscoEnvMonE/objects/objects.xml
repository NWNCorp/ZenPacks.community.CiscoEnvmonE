<?xml version="1.0"?>
<objects>
<!-- ('', 'zport', 'dmd', 'Events', 'Status', 'CiscoEnvMonFan') -->
<object id='/zport/dmd/Events/Status/CiscoEnvMonFan' module='Products.ZenEvents.EventClass' class='EventClass' move='False'>
<property type="text" id="transform" mode="w" >
from ZenPacks.community.CiscoEnvMonE import transforms
transforms.envmon_status_handler(device, component, evt)
</property>
<property type="bool" id="transformEnabled" mode="w" >
True
</property>
</object>
<!-- ('', 'zport', 'dmd', 'Events', 'Status', 'CiscoEnvMonPowerSupply') -->
<object id='/zport/dmd/Events/Status/CiscoEnvMonPowerSupply' module='Products.ZenEvents.EventClass' class='EventClass' move='False'>
<property type="text" id="transform" mode="w" >
from ZenPacks.community.CiscoEnvMonE import transforms
transforms.envmon_status_handler(device, component, evt)
</property>
<property type="bool" id="transformEnabled" mode="w" >
True
</property>
</object>
<!-- ('', 'zport', 'dmd', 'Events', 'Status', 'CiscoEnvMonTemperatureSensor') -->
<object id='/zport/dmd/Events/Status/CiscoEnvMonTemperatureSensor' module='Products.ZenEvents.EventClass' class='EventClass' move='False'>
<property type="text" id="transform" mode="w" >
from ZenPacks.community.CiscoEnvMonE import transforms

ttype = ''

if evt.eventKey == 'ciscoEnvMonTemperatureStatusValue_ciscoEnvMonTemperatureStatusValue|TemperatureHigh':
    ttype = 'tHigh'
    transforms.envmon_process_threshold(device, component, evt, ttype)
else:
    transforms.envmon_status_handler(device, component, evt)
</property>
<property type="bool" id="transformEnabled" mode="w" >
True
</property>
</object>
<!-- ('', 'zport', 'dmd', 'Events', 'Status', 'CiscoEnvMonVoltageSensor') -->
<object id='/zport/dmd/Events/Status/CiscoEnvMonVoltageSensor' module='Products.ZenEvents.EventClass' class='EventClass' move='False'>
<property type="text" id="transform" mode="w" >
"""
if this is a threshold checking status, call envmon_status_handler()
if its a threshold checking temperature readings call envmon_process_threshold()
"""
from ZenPacks.community.CiscoEnvMonE import transforms

ttype = ''

if evt.eventKey == 'ciscoEnvMonVoltageStatusValue_ciscoEnvMonVoltageStatusValue|voltageHigh':
    ttype = 'vHigh'
    transforms.envmon_process_threshold(device, component, evt, ttype)
elif evt.eventKey == 'ciscoEnvMonVoltageStatusValue_ciscoEnvMonVoltageStatusValue|voltageLow':
    ttype = 'vLow'
    transforms.envmon_process_threshold(device, component, evt, ttype)
else:
    transforms.envmon_status_handler(device, component, evt)
</property>
<property type="bool" id="transformEnabled" mode="w" >
True
</property>
</object>
</objects>
